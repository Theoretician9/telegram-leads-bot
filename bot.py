from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.types import Message
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime

# üîê –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞ –æ—Ç @BotFather
API_TOKEN = '7856781434:AAEhmSaFGEPVigjqEL8_zLobuVMJp9dHBSg'

# üîß –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets
scope = [
    "https://spreadsheets.google.com/feeds",
    "https://www.googleapis.com/auth/spreadsheets",
    "https://www.googleapis.com/auth/drive"
]
creds = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
client = gspread.authorize(creds)

# üìÑ –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Ç–∞–±–ª–∏—Ü–µ
sheet = client.open_by_url("https://docs.google.com/spreadsheets/d/1HiPi8UX_ekCHVDXdRxHwD3NlD2w796T2z_BjNBUj8Bg/edit")
worksheet = sheet.sheet1

# ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram-–±–æ—Ç–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(commands=['start'])
async def send_welcome(message: Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ —Ç—Ä–µ–∫–µ—Ä, –∏—Å–ø–æ–ª—å–∑—É–π:\n\n`/add –¢–æ–∫–µ–Ω | –ü—Ä–∏—á–∏–Ω–∞ –≤—Ö–æ–¥–∞ | –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª`\n\n–ü—Ä–∏–º–µ—Ä:\n`/add BONK | –ø–∞–º–ø –∫–∏—Ç–æ–≤ | x10`", parse_mode="Markdown")

# –ö–æ–º–∞–Ω–¥–∞ /add
@dp.message_handler(commands=['add'])
async def add_entry(message: Message):
    try:
        text = message.text.replace('/add', '').strip()
        parts = [p.strip() for p in text.split('|')]

        if len(parts) != 3:
            await message.reply("‚ùå –§–æ—Ä–º–∞—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π. –ü—Ä–∏–º–µ—Ä:\n`/add BONK | –ø–∞–º–ø –∫–∏—Ç–æ–≤ | x10`", parse_mode="Markdown")
            return

        token_name, reason, potential = parts
        today = datetime.today().strftime('%Y-%m-%d')

        values = worksheet.get_all_values()
        row_number = len(values) + 1

        new_row = [
            row_number - 1,       # ‚Ññ
            token_name,           # –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
            today,                # –î–∞—Ç–∞ –≤—Ö–æ–¥–∞
            reason,               # –ü—Ä–∏—á–∏–Ω–∞ –≤—Ö–æ–¥–∞
            10,                   # –°—É–º–º–∞ –≤—Ö–æ–¥–∞ ($)
            potential,            # –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª (x)
            "", "", "", ""        # –û—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
        ]

        worksheet.append_row(new_row)
        await message.reply(f"‚úÖ –ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞: {token_name} ‚Äî {potential}")

    except Exception as e:
        await message.reply(f"üö´ –û—à–∏–±–∫–∞:\n{e}")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
